name: Run tests

on:
  push:
    branches:
      - next
  pull_request:
    branches:
      - next

env:
  COVERALLS_REPO_TOKEN: ${{ github.token }}
  COVERALLS_GIT_BRANCH: ${{ github.ref }}

jobs:
  prepare_dependencies:
    name: Prepare dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn --frozen-lockfile

  lint:
    name: Lint
    needs: prepare_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Run linter
        run: yarn lint

  validate_core:
    name: Validate core
    needs: prepare_dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build core
        run: yarn build:core

      - name: Test core
        run: yarn test:core --coverage && yarn coveralls < ./packages/core/coverage/lcov.info

      - name: Test CLI
        run: yarn test:cli --coverage && yarn coveralls < ./packages/core/cli/coverage/lcov.info

  validate_integrations:
    name: Validate ${{ matrix.integration }}
    needs: validate_core
    runs-on: ubuntu-latest
    strategy:
      matrix:
        integration:
          - about-you
          - boilerplate
          - commercetools
          # - shopify

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get cached dependencies
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build core
        run: yarn build:core

      - name: Build api-client
        run: cd packages/${{ matrix.integration }}/api-client && yarn build

      - name: Test api-client
        run: cd packages/${{ matrix.integration }}/api-client \
          && yarn test --passWithNoTests --coverage \
          && (test -f ./coverage/lcov.info && yarn coveralls < ./coverage/lcov.info)

      - name: Build composables
        run: cd packages/${{ matrix.integration }}/composables && yarn build

      - name: Test composables
        run: cd packages/${{ matrix.integration }}/composables \
          && yarn test --passWithNoTests --coverage \
          && (test -f ./coverage/lcov.info && yarn coveralls < ./coverage/lcov.info)

      - name: Build theme
        run: cd packages/${{ matrix.integration }}/theme && yarn build

      - name: Test theme
        run: cd packages/${{ matrix.integration }}/theme && yarn test --passWithNoTests